
@model SGV_Booking.Models.Restaurant

<head>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-size: 18px; /* 文字を大きくする */
        }
    </style>
</head>

@{
    ViewBag.Title = "BAMBOO LEAF";
}

<div class="container">
    <h1 class="text-center">@Model.RestaurantName</h1>
    <hr />

    <div class="row">
        <div class="col-md-6">
            <div class="text-center">
                <h1>   </h1>
                <h5>Address:</h5>
                <p><a href="https://www.google.com/maps/place/25+Gouger+St,+Adelaide+SA/">@Model.RestaurantAddress.AddressLine @Model.RestaurantAddress.Suburb</a></p>

                <h5>Contact:</h5>
                <p>Email: N/A<br>Phone: @Model.RestaurantPhoneNumber</p>
                <h5>Open Hours: </h5>

                <p id="OpenHours"></p>
                @foreach(var item in Model.RestaurantOpenTimes)
                {
                    <p>@item.SlotName: @item.SlotOpenTime - @item.SlotCloseTime</p>
                }
            </div>
        </div>

        <div class="col-md-6 d-flex flex-column align-items-center">
            <!-- センター配置のためのクラスを追加 -->
            <h5 class="text-center">@Model.RestaurantName Menu</h5>
            <a href="/pdfs/bamboo-leaf-menu.pdf" target="_blank" id="previewPdf">See menu</a>
            <canvas id="pdf-canvas1" style="max-width: 80%; margin: auto;"></canvas> <!-- margin: autoを追加 -->
        </div>
    </div>
</div>

<script src="/js/pdf.js"></script>
<script>
    pdfjsLib.GlobalWorkerOptions.workerSrc = '/js/pdf.worker.js';

    function loadPdf(pdfPath, canvasId, maxCanvasWidth) {
        pdfjsLib.getDocument(pdfPath).promise.then(function (pdf) {
            return pdf.getPage(1);
        }).then(function (page) {
            var viewport = page.getViewport({ scale: 1 });
            var scale = maxCanvasWidth / viewport.width;
            var scaledViewport = page.getViewport({ scale: scale });

            var canvas = document.getElementById(canvasId);
            var context = canvas.getContext('2d');
            canvas.height = scaledViewport.height;
            canvas.width = scaledViewport.width;

            var renderContext = {
                canvasContext: context,
                viewport: scaledViewport
            };
            page.render(renderContext);
        });
    }

    loadPdf('/pdfs/bamboo-leaf-menu.pdf', 'pdf-canvas1', 300);
</script>
@{
    var jsonRestaurantOpenDays = Newtonsoft.Json.JsonConvert.SerializeObject(Model.RestaurantOpenDay);
}

<script type="text/javascript">
    const daysOfWeek = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];

    const restaurantOpenDays = @Html.Raw(jsonRestaurantOpenDays);

    function getOpenDaysString(restaurantOpenDays) {
    let openDays = [];
    for (let i = 0; i < daysOfWeek.length; i++) {
        if (restaurantOpenDays["Open" + daysOfWeek[i]]) {
            openDays.push(daysOfWeek[i]);
        }
    }

    if (openDays.length === 0) {
        return "The restaurant is not open on any day.";
    } else if (openDays.length === 7) {
        return "The restaurant is open every day.";
    } else {
        let firstDay = openDays[0];
        let lastDay = openDays[openDays.length - 1];
        if (openDays.length === 1) {
            return "The restaurant is open only on " + firstDay + ".";
        } else if (openDays.length === 2 && openDays[1] === lastDay) {
            return "The restaurant is open on " + firstDay + " and " + lastDay + ".";
        } else {
            return "Open from " + firstDay + " - " + lastDay + ".";
        }
    }
}

    document.getElementById('OpenHours').innerHTML = getOpenDaysString(restaurantOpenDays);
</script>
