@model SGV_Booking.ViewModels.BookingInfoProcess;
@{
        ViewData["Title"] = "Booking Page";
    }

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: lightblue;
        margin: 0;
        padding: 0;
    }

    .container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    .display-header {
        background-color: #333;
        color: #fff;
        padding: 15px;
        text-align: center;
        font-size: 24px;
        border-radius: 10px;
        margin-bottom: 20px;
    }

    .elem-group {
        margin-bottom: 20px;
    }

    label {
        font-weight: bold;
        display: block;
        margin-bottom: 5px;
    }

    input[type="number"],
    input[type="date"],
    select {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 16px;
    }

    select {
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        background-position: right center;
    }

    button[type="submit"] {
        background-color: #333;
        color: #fff;
        border: none;
        padding: 10px 20px;
        font-size: 18px;
        cursor: pointer;
        border-radius: 5px;
    }
    </style>
<form method="post" action="@Url.Action("BookingSummary", "Booking")">
    <p>@Model.datePicker</p>
    <p>@Model.timePicker</p>
    <input type="hidden" name="guestNumber" value="@Model.guestNumber">
    <input type="hidden" name="banquetOption" value="@Model.banquetOption">
    <input type="hidden" name="datePicker" value="@Model.datePicker">
    <input type="hidden" name="timePicker" value="@Model.timePicker">
    <input type="hidden" name="restaurantSelect" value="@Model.restaurantSelect">
    <input readonly name="customerId" id="customerId" value="@Model.customerID">


    <div class="container">
        <h1 class="display-header">Booking Details</h1>

        <div class="row">
            <div class="col-6">
                <label for="firstName">First Name</label>
                <input class="form-control" id="customerFirstName" name="customerFirstName" placeholder="First Name" type="text" required>
            </div>

            <div class="col-6">
                <label for="lastName">Last Name</label>
                <input class="form-control" id="customerLastName" name="customerLastName" placeholder="Last Name" type="text" required>
            </div>
        </div>

        <div class="row">
            <div class="col-6">
                <label for="email">Email</label>
                <input class="form-control" id="customerEmail" name="customerEmail" placeholder="Email" type="text" required>
            </div>
            <div class="col-6">
                <label for="phoneNumber">Phone Number</label>
                <input class="form-control" id="customerPhone" name="customerPhone" placeholder="e.g 0000000000" maxlength="10" type="text" required>
            </div>
        </div>
        <div class="col-12">
            <label for="requirementNote">Dietary Requirements</label>
        <textarea class="form-control" id="bookingNotes" name="bookingNotes" rows="3" placeholder="Dietary Requirements..."></textarea>
        </div>

        <input type="submit" style="margin-top:1rem" value="Next">
    </div>

</form>
<script>
    fetch('/Booking/GetUserId')
        .then(response => {
            // Check if request was successful
            if (!response.ok) {
                throw new Error('Network response was not ok' + response.statusText);
            }
            return response.json();
        })
        .then(userId => {
            console.log("User ID: " + userId);
            document.getElementById('customerId').value = userId
        })
        .catch(error => {
            console.error('There has been a problem with your fetch operation:', error);
        });

</script>

